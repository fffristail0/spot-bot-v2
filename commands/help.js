const helpText = `
Привет! Это бот для сохранения и обмена фото-спотами.

Основные команды:
- /add — добавить спот
  1) Введите название.
  2) Введите описание.
  3) Отправьте фото как файл (через скрепку), чтобы сохранить координаты EXIF.
- /list — показать ваши споты
  • У каждого спота: фото, описание, место (если есть GPS), ссылка «Открыть на карте», кнопки «Поделиться» и «Удалить».
- /map — открыть все ваши споты на карте
  • Бот собирает KML со всеми доступными вам точками, загружает его и отдаёт ссылку. Откройте её в приложении, например Maps.me.
- /cancel — выйти из текущего режима.
- /help — показать эту справку.

Как поделиться спотом:
- Откройте /list и нажмите «📤 Поделиться» у нужного спота.
- Введите @username пользователя.
- Если пользователь уже в боте — спот сразу появится у него.
- Если нет — создадим ожидающее приглашение. Когда он запустит бота, спот добавится автоматически.

Удаление спотов:
- Если вы владелец и спот никому не шарили — он удаляется полностью (из базы и фото из хранилища).
- Если вы владелец и спот был расшарен — право владения перейдёт первому из «shared»; у вас спот исчезнет из списка.
- Если вы не владелец (вам поделились) — удаление уберёт спот только из вашей коллекции.
- В итоге, когда останется единственный владелец и он удалит спот — спот удаляется полностью.

Советы и ограничения:
- Фото отправляйте именно как файл (через скрепку), иначе Telegram сожмёт изображение и удалит EXIF — координаты пропадут.
- Поддерживаем изображения (JPEG/PNG), размер до 20 МБ.
- Если в фото нет GPS — спот сохранится без координат.
- Команда /map создаёт/обновляет один и тот же KML-файл по постоянной ссылке. Сохраните её и открывайте при необходимости.

Приватность:
- Тексты и метаданные хранятся в Firebase Realtime Database.
- Фото и KML хранятся в Yandex Object Storage (публичный доступ к KML; фото — по вашей настройке).
- Не публикуйте ссылку на KML, если не хотите делиться всеми точками.

По вопросам обращаться к создателю https://t.me/fffr1stail0
`;

module.exports = async (ctx) => {
    try {
      await ctx.reply(helpText, { disable_web_page_preview: true });
    } catch (e) {
      console.error('help command error:', e);
    }
  };
